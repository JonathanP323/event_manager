name: Checking Test Run, Docker Builds, and Security Scan - No upload

on:
  push:
    branches-ignore:
      - 'main'  # Exclude main branch
  pull_request:
    branches-ignore:
      - 'main'  # Exclude main branch

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.12]  # Define Python versions here
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          mkdir ./qr_codes
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with Pytest
        run: pytest

  build-docker-image:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image (without pushing)
        uses: docker/build-push-action@v5
        with:
          push: false  # Disable pushing the image
          tags: kaw393939/devops_demo:${{ github.sha }}  # Tags the image
          load: true  # Load the built image into Docker's local storage
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Scan the Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'kaw393939/devops_demo:${{ github.sha }}'
          format: 'table'
          exit-code: '1'  # Fail the job if vulnerabilities are found
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
